# -*- coding: utf-8 -*-
"""LR_4_task_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XTh9TiSVFI38BPxgVMytTEzRDxX-I3gh
"""

# Імпортуємо необхідні бібліотеки
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import MeanShift, estimate_bandwidth
from itertools import cycle

# Завантажуємо дані
X = np.loadtxt('data_clustering.txt', delimiter=',')

# Оцінка ширини вікна для X. Параметр quantile визначає ширину вікна.
# Чим вище значення quantile, тим більше ширина вікна, що зменшує кількість кластерів
bandwidth_X = estimate_bandwidth(X, quantile=0.1, n_samples=len(X))

# Навчаємо модель кластеризації методом зсуву середнього, використовуючи оцінену ширину вікна
meanshift_model = MeanShift(bandwidth=bandwidth_X, bin_seeding=True)
meanshift_model.fit(X)

# Витягуємо координати центрів кластерів
cluster_centers = meanshift_model.cluster_centers_
print('\nCenters of clusters:\n', cluster_centers)

# Оцінка кількості кластерів
labels = meanshift_model.labels_
num_clusters = len(np.unique(labels))
print("\nNumber of clusters in input data =", num_clusters)

# Візуалізація точок даних та центрів кластерів
plt.figure()
markers = 'o*xvs'  # Набір маркерів для кластерів
for i, marker in zip(range(num_clusters), markers):
    # Відображення точок, що належать до поточного кластера
    plt.scatter(X[labels == i, 0], X[labels == i, 1], marker=marker, color="black")

    # Відображення центру поточного кластера
    cluster_center = cluster_centers[i]
    plt.plot(cluster_center[0], cluster_center[1], marker='o', markerfacecolor="black",
             markeredgecolor="black", markersize=15)

plt.title('Mean Shift Clustering')
plt.show()