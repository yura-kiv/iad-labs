# -*- coding: utf-8 -*-
"""LR_2_task_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17OStA933G7OMkw6Tn8sa668mD-n_Ow72
"""

# RidgeClassifier для задачі класифікації Iris
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import RidgeClassifier
from sklearn import metrics
from sklearn.metrics import confusion_matrix
from io import BytesIO

# Завантаження датасету Iris
iris = load_iris()
X, y = iris.data, iris.target

# Розділення на тренувальну і тестову вибірки
Xtrain, Xtest, ytrain, ytest = train_test_split(X, y, test_size=0.3, random_state=0)

# Побудова моделі Ridge з заданими параметрами
clf = RidgeClassifier(tol=1e-2, solver="sag")
clf.fit(Xtrain, ytrain)

# Прогнозування на тестовій вибірці
ypred = clf.predict(Xtest)

# Оцінка якості моделі
print('Accuracy:', np.round(metrics.accuracy_score(ytest, ypred), 4))
print('Precision:', np.round(metrics.precision_score(ytest, ypred, average='weighted'), 4))
print('Recall:', np.round(metrics.recall_score(ytest, ypred, average='weighted'), 4))
print('F1 Score:', np.round(metrics.f1_score(ytest, ypred, average='weighted'), 4))
print('Cohen Kappa Score:', np.round(metrics.cohen_kappa_score(ytest, ypred), 4))
print('Matthews Corrcoef:', np.round(metrics.matthews_corrcoef(ytest, ypred), 4))

# Звіт класифікації
print('\n\t\tClassification Report:\n')
print(metrics.classification_report(ytest, ypred, target_names=iris.target_names))

# Матриця плутанини
mat = confusion_matrix(ytest, ypred)
sns.set()
plt.figure(figsize=(6, 5))
sns.heatmap(mat, annot=True, fmt='d', cbar=False,
            xticklabels=iris.target_names,
            yticklabels=iris.target_names)
plt.xlabel('Predicted label')
plt.ylabel('True label')
plt.title('Confusion Matrix - Ridge Classifier')
plt.tight_layout()
plt.savefig("Confusion.jpg")

# Додаткове збереження у форматі SVG
f = BytesIO()
plt.savefig(f, format="svg")